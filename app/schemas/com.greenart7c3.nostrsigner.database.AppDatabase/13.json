{
  "formatVersion": 1,
  "database": {
    "version": 13,
    "identityHash": "d131ebf90a6880699604a8333a4ee234",
    "entities": [
      {
        "tableName": "application",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`key` TEXT NOT NULL, `name` TEXT NOT NULL, `relays` TEXT NOT NULL, `url` TEXT NOT NULL, `icon` TEXT NOT NULL, `description` TEXT NOT NULL, `pubKey` TEXT NOT NULL, `isConnected` INTEGER NOT NULL, `secret` TEXT NOT NULL, `useSecret` INTEGER NOT NULL, `signPolicy` INTEGER NOT NULL, `closeApplication` INTEGER NOT NULL, `deleteAfter` INTEGER NOT NULL, PRIMARY KEY(`key`))",
        "fields": [
          {
            "fieldPath": "key",
            "columnName": "key",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "name",
            "columnName": "name",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "relays",
            "columnName": "relays",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "icon",
            "columnName": "icon",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "description",
            "columnName": "description",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "pubKey",
            "columnName": "pubKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "isConnected",
            "columnName": "isConnected",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "secret",
            "columnName": "secret",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "useSecret",
            "columnName": "useSecret",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "signPolicy",
            "columnName": "signPolicy",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "closeApplication",
            "columnName": "closeApplication",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "deleteAfter",
            "columnName": "deleteAfter",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "key"
          ]
        },
        "indices": [
          {
            "name": "index_key",
            "unique": true,
            "columnNames": [
              "key"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `index_key` ON `${TABLE_NAME}` (`key`)"
          },
          {
            "name": "index_name",
            "unique": false,
            "columnNames": [
              "name"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `index_name` ON `${TABLE_NAME}` (`name`)"
          }
        ]
      },
      {
        "tableName": "applicationPermission",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER, `pkKey` TEXT NOT NULL, `type` TEXT NOT NULL, `kind` INTEGER, `acceptable` INTEGER NOT NULL, `rememberType` INTEGER NOT NULL, `acceptUntil` INTEGER NOT NULL, `rejectUntil` INTEGER NOT NULL, PRIMARY KEY(`id`), FOREIGN KEY(`pkKey`) REFERENCES `application`(`key`) ON UPDATE NO ACTION ON DELETE CASCADE )",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "pkKey",
            "columnName": "pkKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "kind",
            "columnName": "kind",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "acceptable",
            "columnName": "acceptable",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rememberType",
            "columnName": "rememberType",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "acceptUntil",
            "columnName": "acceptUntil",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "rejectUntil",
            "columnName": "rejectUntil",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": false,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "permissions_by_pk_key",
            "unique": false,
            "columnNames": [
              "pkKey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `permissions_by_pk_key` ON `${TABLE_NAME}` (`pkKey`)"
          },
          {
            "name": "permissions_unique",
            "unique": true,
            "columnNames": [
              "pkKey",
              "type",
              "kind"
            ],
            "orders": [],
            "createSql": "CREATE UNIQUE INDEX IF NOT EXISTS `permissions_unique` ON `${TABLE_NAME}` (`pkKey`, `type`, `kind`)"
          }
        ],
        "foreignKeys": [
          {
            "table": "application",
            "onDelete": "CASCADE",
            "onUpdate": "NO ACTION",
            "columns": [
              "pkKey"
            ],
            "referencedColumns": [
              "key"
            ]
          }
        ]
      },
      {
        "tableName": "amber_log",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `url` TEXT NOT NULL, `type` TEXT NOT NULL, `message` TEXT NOT NULL, `time` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "url",
            "columnName": "url",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "message",
            "columnName": "message",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        }
      },
      {
        "tableName": "history2",
        "createSql": "CREATE TABLE IF NOT EXISTS `${TABLE_NAME}` (`id` INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, `pkKey` TEXT NOT NULL, `type` TEXT NOT NULL, `kind` INTEGER, `time` INTEGER NOT NULL, `accepted` INTEGER NOT NULL)",
        "fields": [
          {
            "fieldPath": "id",
            "columnName": "id",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "pkKey",
            "columnName": "pkKey",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "type",
            "columnName": "type",
            "affinity": "TEXT",
            "notNull": true
          },
          {
            "fieldPath": "kind",
            "columnName": "kind",
            "affinity": "INTEGER"
          },
          {
            "fieldPath": "time",
            "columnName": "time",
            "affinity": "INTEGER",
            "notNull": true
          },
          {
            "fieldPath": "accepted",
            "columnName": "accepted",
            "affinity": "INTEGER",
            "notNull": true
          }
        ],
        "primaryKey": {
          "autoGenerate": true,
          "columnNames": [
            "id"
          ]
        },
        "indices": [
          {
            "name": "history_by_pk_key2",
            "unique": false,
            "columnNames": [
              "pkKey"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `history_by_pk_key2` ON `${TABLE_NAME}` (`pkKey`)"
          },
          {
            "name": "history_by_id2",
            "unique": false,
            "columnNames": [
              "id"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `history_by_id2` ON `${TABLE_NAME}` (`id`)"
          },
          {
            "name": "history_by_time",
            "unique": false,
            "columnNames": [
              "time"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `history_by_time` ON `${TABLE_NAME}` (`time`)"
          },
          {
            "name": "history_by_key_and_time",
            "unique": false,
            "columnNames": [
              "pkKey",
              "time"
            ],
            "orders": [],
            "createSql": "CREATE INDEX IF NOT EXISTS `history_by_key_and_time` ON `${TABLE_NAME}` (`pkKey`, `time`)"
          }
        ]
      }
    ],
    "setupQueries": [
      "CREATE TABLE IF NOT EXISTS room_master_table (id INTEGER PRIMARY KEY,identity_hash TEXT)",
      "INSERT OR REPLACE INTO room_master_table (id,identity_hash) VALUES(42, 'd131ebf90a6880699604a8333a4ee234')"
    ]
  }
}